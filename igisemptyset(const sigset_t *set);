SIGSETOPS(3)                                                                                                Linux Programmer's Manual                                                                                                SIGSETOPS(3)

NNAAMMEE
       sigemptyset, sigfillset, sigaddset, sigdelset, sigismember - POSIX signal set operations

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<ssiiggnnaall..hh>>

       iinntt ssiiggeemmppttyysseett((ssiiggsseett__tt **_s_e_t));;

       iinntt ssiiggffiillllsseett((ssiiggsseett__tt **_s_e_t));;

       iinntt ssiiggaaddddsseett((ssiiggsseett__tt **_s_e_t,, iinntt _s_i_g_n_u_m));;

       iinntt ssiiggddeellsseett((ssiiggsseett__tt **_s_e_t,, iinntt _s_i_g_n_u_m));;

       iinntt ssiiggiissmmeemmbbeerr((ccoonnsstt ssiiggsseett__tt **_s_e_t,, iinntt _s_i_g_n_u_m));;

   Feature Test Macro Requirements for glibc (see ffeeaattuurree__tteesstt__mmaaccrrooss(7)):

       ssiiggeemmppttyysseett(), ssiiggffiillllsseett(), ssiiggaaddddsseett(), ssiiggddeellsseett(), ssiiggiissmmeemmbbeerr():
           _POSIX_C_SOURCE >= 1 || _XOPEN_SOURCE || _POSIX_SOURCE

DDEESSCCRRIIPPTTIIOONN
       These functions allow the manipulation of POSIX signal sets.

       ssiiggeemmppttyysseett() initializes the signal set given by _s_e_t to empty, with all signals excluded from the set.

       ssiiggffiillllsseett() initializes _s_e_t to full, including all signals.

       ssiiggaaddddsseett() and ssiiggddeellsseett() add and delete respectively signal _s_i_g_n_u_m from _s_e_t.

       ssiiggiissmmeemmbbeerr() tests whether _s_i_g_n_u_m is a member of _s_e_t.

       Objects  of  type  _s_i_g_s_e_t___t  must  be  initialized  by  a  call  to either ssiiggeemmppttyysseett() or ssiiggffiillllsseett() before being passed to the functions ssiiggaaddddsseett(), ssiiggddeellsseett() and ssiiggiissmmeemmbbeerr() or the additional glibc functions described below
       (ssiiggiisseemmppttyysseett(), ssiiggaannddsseett(), and ssiiggoorrsseett()).  The results are undefined if this is not done.

RREETTUURRNN VVAALLUUEE
       ssiiggeemmppttyysseett(), ssiiggffiillllsseett(), ssiiggaaddddsseett(), and ssiiggddeellsseett() return 0 on success and -1 on error.

       ssiiggiissmmeemmbbeerr() returns 1 if _s_i_g_n_u_m is a member of _s_e_t, 0 if _s_i_g_n_u_m is not a member, and -1 on error.

       On error, these functions set _e_r_r_n_o to indicate the cause of the error.

EERRRROORRSS
       EEIINNVVAALL _s_i_g is not a valid signal.

AATTTTRRIIBBUUTTEESS
       For an explanation of the terms used in this section, see aattttrriibbuutteess(7).

       ┌────────────────────────────────┬───────────────┬─────────┐
       │IInntteerrffaaccee                       │ AAttttrriibbuuttee     │ VVaalluuee   │
       ├────────────────────────────────┼───────────────┼─────────┤
       │ssiiggeemmppttyysseett(), ssiiggffiillllsseett(),    │ Thread safety │ MT-Safe │
       │ssiiggaaddddsseett(), ssiiggddeellsseett(),       │               │         │
       │ssiiggiissmmeemmbbeerr(), ssiiggiisseemmppttyysseett(), │               │         │
       │ssiiggoorrsseett(), ssiiggaannddsseett()         │               │         │
       └────────────────────────────────┴───────────────┴─────────┘
CCOONNFFOORRMMIINNGG TTOO
       POSIX.1-2001, POSIX.1-2008.

NNOOTTEESS
       When creating a filled signal set, the glibc ssiiggffiillllsseett() function does not include the two real-time signals used internally by the NPTL threading implementation.  See nnppttll(7) for details.

   GGlliibbcc eexxtteennssiioonnss
       If the __GGNNUU__SSOOUURRCCEE feature test macro is defined, then _<_s_i_g_n_a_l_._h_> exposes three other functions for manipulating signal sets:

       iinntt ssiiggiisseemmppttyysseett((ccoonnsstt ssiiggsseett__tt **_s_e_t));;
       iinntt ssiiggoorrsseett((ssiiggsseett__tt **_d_e_s_t,, ccoonnsstt ssiiggsseett__tt **_l_e_f_t,,
                     ccoonnsstt ssiiggsseett__tt **_r_i_g_h_t));;
       iinntt ssiiggaannddsseett((ssiiggsseett__tt **_d_e_s_t,, ccoonnsstt ssiiggsseett__tt **_l_e_f_t,,
                     ccoonnsstt ssiiggsseett__tt **_r_i_g_h_t));;

       ssiiggiisseemmppttyysseett() returns 1 if _s_e_t contains no signals, and 0 otherwise.

       ssiiggoorrsseett() places the union of the sets _l_e_f_t and _r_i_g_h_t in _d_e_s_t.  ssiiggaannddsseett() places the intersection of the sets _l_e_f_t and _r_i_g_h_t in _d_e_s_t.  Both functions return 0 on success, and -1 on failure.

       These functions are nonstandard (a few other systems provide similar functions) and their use should be avoided in portable applications.

SSEEEE AALLSSOO
       ssiiggaaccttiioonn(2), ssiiggppeennddiinngg(2), ssiiggpprrooccmmaasskk(2), ssiiggssuussppeenndd(2)

CCOOLLOOPPHHOONN
       This page is part of release 4.04 of the Linux _m_a_n_-_p_a_g_e_s project.  A description of the project, information about reporting bugs, and the latest version of this page, can be found at http://www.kernel.org/doc/man-pages/.

Linux                                                                                                               2015-08-08                                                                                                       SIGSETOPS(3)
