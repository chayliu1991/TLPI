MSYNC(2)                                                                                                    Linux Programmer's Manual                                                                                                    MSYNC(2)

NNAAMMEE
       msync - synchronize a file with a memory map

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<ssyyss//mmmmaann..hh>>

       iinntt mmssyynncc((vvooiidd **_a_d_d_r,, ssiizzee__tt _l_e_n_g_t_h,, iinntt _f_l_a_g_s));;

DDEESSCCRRIIPPTTIIOONN
       mmssyynncc()  flushes  changes  made to the in-core copy of a file that was mapped into memory using mmmmaapp(2) back to the filesystem.  Without use of this call, there is no guarantee that changes are written back before mmuunnmmaapp(2) is called.
       To be more precise, the part of the file that corresponds to the memory area starting at _a_d_d_r and having length _l_e_n_g_t_h is updated.

       The _f_l_a_g_s argument should specify exactly one of MMSS__AASSYYNNCC and MMSS__SSYYNNCC, and may additionally include the MMSS__IINNVVAALLIIDDAATTEE bit.  These bits have the following meanings:

       MMSS__AASSYYNNCC
              Specifies that an update be scheduled, but the call returns immediately.

       MMSS__SSYYNNCC
              Requests an update and waits for it to complete.

       MMSS__IINNVVAALLIIDDAATTEE
              Asks to invalidate other mappings of the same file (so that they can be updated with the fresh values just written).

RREETTUURRNN VVAALLUUEE
       On success, zero is returned.  On error, -1 is returned, and _e_r_r_n_o is set appropriately.

EERRRROORRSS
       EEBBUUSSYY  MMSS__IINNVVAALLIIDDAATTEE was specified in _f_l_a_g_s, and a memory lock exists for the specified address range.

       EEIINNVVAALL _a_d_d_r is not a multiple of PAGESIZE; or any bit other than MMSS__AASSYYNNCC | MMSS__IINNVVAALLIIDDAATTEE | MMSS__SSYYNNCC is set in _f_l_a_g_s; or both MMSS__SSYYNNCC and MMSS__AASSYYNNCC are set in _f_l_a_g_s.

       EENNOOMMEEMM The indicated memory (or part of it) was not mapped.

CCOONNFFOORRMMIINNGG TTOO
       POSIX.1-2001, POSIX.1-2008.

       This call was introduced in Linux 1.3.21, and then used EEFFAAUULLTT instead of EENNOOMMEEMM.  In Linux 2.4.19, this was changed to the POSIX value EENNOOMMEEMM.

AAVVAAIILLAABBIILLIITTYY
       On POSIX systems on which mmssyynncc() is available, both __PPOOSSIIXX__MMAAPPPPEEDD__FFIILLEESS and __PPOOSSIIXX__SSYYNNCCHHRROONNIIZZEEDD__IIOO are defined in _<_u_n_i_s_t_d_._h_> to a value greater than 0.  (See also ssyyssccoonnff(3).)

NNOOTTEESS
       According to POSIX, either MMSS__SSYYNNCC or MMSS__AASSYYNNCC must be specified in _f_l_a_g_s, and indeed failure to include one of these flags will cause mmssyynncc() to fail on some systems.  However, Linux permits a call to mmssyynncc() that  specifies  neither
       of  these  flags,  with semantics that are (currently) equivalent to specifying MMSS__AASSYYNNCC.  (Since Linux 2.6.19, MMSS__AASSYYNNCC is in fact a no-op, since the kernel properly tracks dirty pages and flushes them to storage as necessary.)  Not‚Äê
       withstanding the Linux behavior, portable, future-proof applications should ensure that they specify either MMSS__SSYYNNCC or MMSS__AASSYYNNCC in _f_l_a_g_s.

SSEEEE AALLSSOO
       mmmmaapp(2)

       B.O. Gallmeister, POSIX.4, O'Reilly, pp. 128-129 and 389-391.

CCOOLLOOPPHHOONN
       This page is part of release 4.04 of the Linux _m_a_n_-_p_a_g_e_s project.  A description of the project, information about reporting bugs, and the latest version of this page, can be found at http://www.kernel.org/doc/man-pages/.

Linux                                                                                                               2015-08-08                                                                                                           MSYNC(2)
