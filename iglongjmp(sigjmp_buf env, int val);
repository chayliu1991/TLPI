LONGJMP(3)                                                                                                  Linux Programmer's Manual                                                                                                  LONGJMP(3)

NNAAMMEE
       longjmp, siglongjmp - nonlocal jump to a saved stack context

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<sseettjjmmpp..hh>>

       vvooiidd lloonnggjjmmpp((jjmmpp__bbuuff _e_n_v,, iinntt _v_a_l));;

       vvooiidd ssiigglloonnggjjmmpp((ssiiggjjmmpp__bbuuff _e_n_v,, iinntt _v_a_l));;

   Feature Test Macro Requirements for glibc (see ffeeaattuurree__tteesstt__mmaaccrrooss(7)):

       ssiigglloonnggjjmmpp(): _POSIX_C_SOURCE >= 1 || _XOPEN_SOURCE || _POSIX_C_SOURCE

DDEESSCCRRIIPPTTIIOONN
       lloonnggjjmmpp() and sseettjjmmpp(3) are useful for dealing with errors and interrupts encountered in a low-level subroutine of a program.  lloonnggjjmmpp() restores the environment saved by the last call of sseettjjmmpp(3) with the corresponding _e_n_v argument.
       After lloonnggjjmmpp() is completed, program execution continues as if the corresponding call of sseettjjmmpp(3) had just returned the value _v_a_l.  lloonnggjjmmpp() cannot cause 0 to be returned.  If lloonnggjjmmpp() is invoked with a second  argument  of  0,  1
       will be returned instead.

       ssiigglloonnggjjmmpp()  is  similar  to  lloonnggjjmmpp()  except  for  the  type of its _e_n_v argument.  If, and only if, the ssiiggsseettjjmmpp(3) call that set this _e_n_v used a nonzero _s_a_v_e_s_i_g_s flag, ssiigglloonnggjjmmpp() also restores the signal mask that was saved by
       ssiiggsseettjjmmpp(3).

RREETTUURRNN VVAALLUUEE
       These functions never return.

AATTTTRRIIBBUUTTEESS
       For an explanation of the terms used in this section, see aattttrriibbuutteess(7).

       ┌────────────────────────┬───────────────┬─────────┐
       │IInntteerrffaaccee               │ AAttttrriibbuuttee     │ VVaalluuee   │
       ├────────────────────────┼───────────────┼─────────┤
       │lloonnggjjmmpp(), ssiigglloonnggjjmmpp() │ Thread safety │ MT-Safe │
       └────────────────────────┴───────────────┴─────────┘

CCOONNFFOORRMMIINNGG TTOO
       lloonnggjjmmpp(): POSIX.1-2001, POSIX.1-2008, C89, C99.

       ssiigglloonnggjjmmpp(): POSIX.1-2001, POSIX.1-2008.

NNOOTTEESS
       POSIX does not specify whether lloonnggjjmmpp() will restore the signal context (see sseettjjmmpp(3) for some more details).  If you want to portably save and restore signal masks, use ssiiggsseettjjmmpp(3) and ssiigglloonnggjjmmpp().

       The values of automatic variables are unspecified after a call to lloonnggjjmmpp() if they meet all the following criteria:

       ·  they are local to the function that made the corresponding sseettjjmmpp(3) call;

       ·  their values are changed between the calls to sseettjjmmpp(3) and lloonnggjjmmpp(); and

       ·  they are not declared as _v_o_l_a_t_i_l_e.

       Analogous remarks apply for ssiigglloonnggjjmmpp().

       lloonnggjjmmpp() and ssiigglloonnggjjmmpp() make programs hard to understand and maintain.  If possible, an alternative should be used.

SSEEEE AALLSSOO
       sseettjjmmpp(3), ssiiggsseettjjmmpp(3)

CCOOLLOOPPHHOONN
       This page is part of release 4.04 of the Linux _m_a_n_-_p_a_g_e_s project.  A description of the project, information about reporting bugs, and the latest version of this page, can be found at http://www.kernel.org/doc/man-pages/.

                                                                                                                    2015-08-08                                                                                                         LONGJMP(3)
